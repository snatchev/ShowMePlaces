worker_processes ${{NUM_WORKERS}};
error_log stderr notice;
daemon off;

events {
  worker_connections ${{WORKER_CONNECTIONS}};
}

http {
  include mime.types;

  proxy_cache_path proxy_cache/upstream levels=1:2 keys_zone=upstream:15m;
  proxy_ignore_headers X-Accel-Expires Expires Cache-Control Set-Cookie;
  proxy_cache_valid any 30s;

  server {
    listen ${{PORT}};
    lua_code_cache ${{CODE_CACHE}};

    location / {
      default_type text/html;
      content_by_lua_file "web.lua";
      set $_url "";
    }

    location /static/ {
      alias static/;
    }

    location /favicon.ico {
      alias static/favicon.ico;
    }

    location /proxy {
      internal;
      rewrite_by_lua "
        local req = ngx.req

        for k,v in pairs(req.get_headers()) do
          if k ~= 'content-length' then
            req.clear_header(k)
          end
        end

        if ngx.ctx.headers then
          for k,v in pairs(ngx.ctx.headers) do
            req.set_header(k, v)
          end
        end
      ";

      resolver 8.8.8.8;
      proxy_http_version 1.1;
      proxy_pass $_url;

      #cache the upstream responses
      proxy_cache upstream;
    }
  }
}
